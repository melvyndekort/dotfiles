#                    __ _ _      
#   _ __  _ __ ___  / _(_) | ___ 
#  | '_ \| '__/ _ \| |_| | |/ _ \
# _| |_) | | | (_) |  _| | |  __/
#(_) .__/|_|  \___/|_| |_|_|\___|
#  |_|                           
#

# Export some default variables
export EDITOR='vim'
export BROWSER='google-chrome-stable'
export TERMINAL='termite'
export PAGER='less'
export LESS="-XR"

# Set XDG variables
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME=$HOME/.local/share
export XDG_CACHE_HOME="$HOME/.cache"

# Set MISC variables
export AWS_DEFAULT_REGION="eu-west-1"
export LIBVIRT_DEFAULT_URI=qemu:///system
export HISTFILE="$XDG_DATA_HOME"/zsh/history
export SCREENRC="$XDG_CONFIG_HOME"/screen/screenrc
export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME"/aws/credentials
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME"/aws/config
export INPUTRC="$XDG_CONFIG_HOME"/readline/inputrc
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"
export PYLINTHOME="$XDG_CACHE_HOME/pylint"
export TF_CLI_CONFIG_FILE="$XDG_CONFIG_HOME/terraform/terraform.rc"
export TMUX_TMPDIR="$XDG_RUNTIME_DIR"
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"
export ANDROID_SDK_HOME="$XDG_CONFIG_HOME/android"
export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
export ICEAUTHORITY="$XDG_CACHE_HOME/ICEauthority"

# Set MISC aliases
alias rm='rm -I'
alias v='vim'
alias more='less'
alias lspath='for i in $(echo $PATH | sed "s/:/\ /g"); do find $i -maxdepth 1 -xtype f -executable; done | sort -u'
alias tcpdumpclean='tcpdump -nn -i eth0 not arp and not stp and not port 22 and not port 53 and not ip6 and not udp'
alias tmux="tmux -f $XDG_CONFIG_HOME/tmux/tmux.conf"
alias tf='terraform'
alias rg="rg -S --no-ignore --hidden --glob '!{.git,node_modules,**/.terraform}/**'"
alias netstat='echo NETSTAT is unavailable on Arch, please use \"ss -natl\"'
alias setclip='xclip -selection clipboard'
alias getclip='xclip -o -selection clipboard'
alias syncwatch='watch grep -e Dirty: -e Writeback: /proc/meminfo'
alias ci3="vim $HOME/.config/i3/config"
alias cib="vim $HOME/.config/i3/i3blocks.conf"
alias wi3="cd $HOME/.config/i3"
alias wib="cd $HOME/.config/statusbar"
alias abcde="abcde -c $XDG_CONFIG_HOME/abcde/abcde.conf"
alias ripcd='abcde -d /dev/cdrom'
alias sc="sc-im"
alias yt="youtube-dl --add-metadata -ic"
alias yta="youtube-dl --add-metadata -xic"
alias r="ranger"
alias cm="chezmoi"

# Docker short aliases
alias d='docker'
alias dc='docker container'
alias di='docker image'
alias ds='docker system'

# Run specific docker containers
alias alpine='docker container run --rm -it alpine:3.11 /bin/sh'
alias tor='docker container run --rm -it -p 3128:3128 -p 9050:9050 melvyndekort/toroxy'
alias nginx='docker container run --rm -it -v `pwd`:/usr/share/nginx/html:ro -p 80:80 nginx:1.15.8'
alias wol='docker container run --rm -it --net host melvyndekort/wol'

# Set MISC functions
ix() {
    local opts
    local OPTIND
    [ -f "$HOME/.netrc" ] && opts='-n'
    while getopts ":hd:i:n:" x; do
        case $x in
            h) echo "ix [-d ID] [-i ID] [-n N] [opts]"; return;;
            d) $echo curl $opts -X DELETE ix.io/$OPTARG; return;;
            i) opts="$opts -X PUT"; local id="$OPTARG";;
            n) opts="$opts -F read:1=$OPTARG";;
        esac
    done
    shift $(($OPTIND - 1))
    [ -t 0 ] && {
        local filename="$1"
        shift
        [ "$filename" ] && {
            curl $opts -F f:1=@"$filename" $* ix.io/$id
            return
        }
        echo "^C to cancel, ^D to send."
    }
    curl $opts -F f:1='<-' $* ix.io/$id
}

# Generate the public key fingerpirnt
ssh-fingerprint() {
  ssh-keyscan $@ | ssh-keygen -l -E md5 -f -
}

# Generate an MFA token
mfa() {
  if pacman -qQ oath-toolkit > /dev/null; then
    if [ -f $HOME/.mfa/$1.mfa ]; then
      oathtool --base32 --totp "$(cat ~/.mfa/${1}.mfa)" ;
    else
      echo "MFA config ${1} does not exist"
    fi
  else
    sudo pacman -S oath-toolkit
  fi
}

# Find the account id of an AWS account
acct() {
  grep "[0-9][0-9].*$1" ~/src/wow/devops/*
}

# tmux configuration
if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
  git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
fi

{{- if eq .email "m.de.kort@portbase.com" }}
# Work related stuff
export ARTIFACTORY_URL="https://{{ (index (lastpass "Artifactory - readonly") 0).username -}}:{{ urlquery ((index (lastpass "Artifactory - readonly") 0).password) -}}@artifactory.portbase.io/artifactory"
alias wpcs-build="mvn -T C1 clean package -DskipTests -Dnaomi.skip -Dmaven.antrun.skip -pl \!naomi/naomi-maven-plugin-test"
alias sqlplus='docker container run --rm -it --network host melvyndekort/sqlplus'
{{- end }}

# start the windows manager
if [ "$(tty)" = "/dev/tty1" ]; then
  startx && exit
fi

#AWSume alias to source the AWSume script
alias awsume=". awsume"
